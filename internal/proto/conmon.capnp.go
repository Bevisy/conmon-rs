// Code generated by capnpc-go. DO NOT EDIT.

package proto

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
)

type Conmon struct{ Client *capnp.Client }

// Conmon_TypeID is the unique identifier for the type Conmon.
const Conmon_TypeID = 0xb737e899dd6633f1

func (c Conmon) Version(ctx context.Context, params func(Conmon_version_Params) error) (Conmon_version_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      0,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "version",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Conmon_version_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Conmon_version_Results_Future{Future: ans.Future()}, release
}
func (c Conmon) CreateContainer(ctx context.Context, params func(Conmon_createContainer_Params) error) (Conmon_createContainer_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      1,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "createContainer",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Conmon_createContainer_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Conmon_createContainer_Results_Future{Future: ans.Future()}, release
}

func (c Conmon) AddRef() Conmon {
	return Conmon{
		Client: c.Client.AddRef(),
	}
}

func (c Conmon) Release() {
	c.Client.Release()
}

// A Conmon_Server is a Conmon with a local implementation.
type Conmon_Server interface {
	Version(context.Context, Conmon_version) error

	CreateContainer(context.Context, Conmon_createContainer) error
}

// Conmon_NewServer creates a new Server from an implementation of Conmon_Server.
func Conmon_NewServer(s Conmon_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Conmon_Methods(nil, s), s, c, policy)
}

// Conmon_ServerToClient creates a new Client from an implementation of Conmon_Server.
// The caller is responsible for calling Release on the returned Client.
func Conmon_ServerToClient(s Conmon_Server, policy *server.Policy) Conmon {
	return Conmon{Client: capnp.NewClient(Conmon_NewServer(s, policy))}
}

// Conmon_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Conmon_Methods(methods []server.Method, s Conmon_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      0,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "version",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Version(ctx, Conmon_version{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      1,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "createContainer",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.CreateContainer(ctx, Conmon_createContainer{call})
		},
	})

	return methods
}

// Conmon_version holds the state for a server call to Conmon.version.
// See server.Call for documentation.
type Conmon_version struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Conmon_version) Args() Conmon_version_Params {
	return Conmon_version_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Conmon_version) AllocResults() (Conmon_version_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_version_Results{Struct: r}, err
}

// Conmon_createContainer holds the state for a server call to Conmon.createContainer.
// See server.Call for documentation.
type Conmon_createContainer struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Conmon_createContainer) Args() Conmon_createContainer_Params {
	return Conmon_createContainer_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Conmon_createContainer) AllocResults() (Conmon_createContainer_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_createContainer_Results{Struct: r}, err
}

type Conmon_VersionResponse struct{ capnp.Struct }

// Conmon_VersionResponse_TypeID is the unique identifier for the type Conmon_VersionResponse.
const Conmon_VersionResponse_TypeID = 0xf34be5cbac1feed1

func NewConmon_VersionResponse(s *capnp.Segment) (Conmon_VersionResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return Conmon_VersionResponse{st}, err
}

func NewRootConmon_VersionResponse(s *capnp.Segment) (Conmon_VersionResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return Conmon_VersionResponse{st}, err
}

func ReadRootConmon_VersionResponse(msg *capnp.Message) (Conmon_VersionResponse, error) {
	root, err := msg.Root()
	return Conmon_VersionResponse{root.Struct()}, err
}

func (s Conmon_VersionResponse) String() string {
	str, _ := text.Marshal(0xf34be5cbac1feed1, s.Struct)
	return str
}

func (s Conmon_VersionResponse) Version() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Conmon_VersionResponse) HasVersion() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_VersionResponse) VersionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Conmon_VersionResponse) SetVersion(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Conmon_VersionResponse) Tag() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Conmon_VersionResponse) HasTag() bool {
	return s.Struct.HasPtr(1)
}

func (s Conmon_VersionResponse) TagBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Conmon_VersionResponse) SetTag(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Conmon_VersionResponse) Commit() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Conmon_VersionResponse) HasCommit() bool {
	return s.Struct.HasPtr(2)
}

func (s Conmon_VersionResponse) CommitBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Conmon_VersionResponse) SetCommit(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Conmon_VersionResponse) BuildDate() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Conmon_VersionResponse) HasBuildDate() bool {
	return s.Struct.HasPtr(3)
}

func (s Conmon_VersionResponse) BuildDateBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Conmon_VersionResponse) SetBuildDate(v string) error {
	return s.Struct.SetText(3, v)
}

func (s Conmon_VersionResponse) RustVersion() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s Conmon_VersionResponse) HasRustVersion() bool {
	return s.Struct.HasPtr(4)
}

func (s Conmon_VersionResponse) RustVersionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s Conmon_VersionResponse) SetRustVersion(v string) error {
	return s.Struct.SetText(4, v)
}

// Conmon_VersionResponse_List is a list of Conmon_VersionResponse.
type Conmon_VersionResponse_List struct{ capnp.List }

// NewConmon_VersionResponse creates a new list of Conmon_VersionResponse.
func NewConmon_VersionResponse_List(s *capnp.Segment, sz int32) (Conmon_VersionResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5}, sz)
	return Conmon_VersionResponse_List{l}, err
}

func (s Conmon_VersionResponse_List) At(i int) Conmon_VersionResponse {
	return Conmon_VersionResponse{s.List.Struct(i)}
}

func (s Conmon_VersionResponse_List) Set(i int, v Conmon_VersionResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_VersionResponse_List) String() string {
	str, _ := text.MarshalList(0xf34be5cbac1feed1, s.List)
	return str
}

// Conmon_VersionResponse_Future is a wrapper for a Conmon_VersionResponse promised by a client call.
type Conmon_VersionResponse_Future struct{ *capnp.Future }

func (p Conmon_VersionResponse_Future) Struct() (Conmon_VersionResponse, error) {
	s, err := p.Future.Struct()
	return Conmon_VersionResponse{s}, err
}

type Conmon_CreateContainerRequest struct{ capnp.Struct }

// Conmon_CreateContainerRequest_TypeID is the unique identifier for the type Conmon_CreateContainerRequest.
const Conmon_CreateContainerRequest_TypeID = 0xba77e3fa3aa9b6ca

func NewConmon_CreateContainerRequest(s *capnp.Segment) (Conmon_CreateContainerRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Conmon_CreateContainerRequest{st}, err
}

func NewRootConmon_CreateContainerRequest(s *capnp.Segment) (Conmon_CreateContainerRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Conmon_CreateContainerRequest{st}, err
}

func ReadRootConmon_CreateContainerRequest(msg *capnp.Message) (Conmon_CreateContainerRequest, error) {
	root, err := msg.Root()
	return Conmon_CreateContainerRequest{root.Struct()}, err
}

func (s Conmon_CreateContainerRequest) String() string {
	str, _ := text.Marshal(0xba77e3fa3aa9b6ca, s.Struct)
	return str
}

func (s Conmon_CreateContainerRequest) Id() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Conmon_CreateContainerRequest) HasId() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_CreateContainerRequest) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Conmon_CreateContainerRequest) SetId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Conmon_CreateContainerRequest) BundlePath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Conmon_CreateContainerRequest) HasBundlePath() bool {
	return s.Struct.HasPtr(1)
}

func (s Conmon_CreateContainerRequest) BundlePathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Conmon_CreateContainerRequest) SetBundlePath(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Conmon_CreateContainerRequest) Terminal() bool {
	return s.Struct.Bit(0)
}

func (s Conmon_CreateContainerRequest) SetTerminal(v bool) {
	s.Struct.SetBit(0, v)
}

func (s Conmon_CreateContainerRequest) ExitPaths() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.TextList{List: p.List()}, err
}

func (s Conmon_CreateContainerRequest) HasExitPaths() bool {
	return s.Struct.HasPtr(2)
}

func (s Conmon_CreateContainerRequest) SetExitPaths(v capnp.TextList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewExitPaths sets the exitPaths field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Conmon_CreateContainerRequest) NewExitPaths(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

// Conmon_CreateContainerRequest_List is a list of Conmon_CreateContainerRequest.
type Conmon_CreateContainerRequest_List struct{ capnp.List }

// NewConmon_CreateContainerRequest creates a new list of Conmon_CreateContainerRequest.
func NewConmon_CreateContainerRequest_List(s *capnp.Segment, sz int32) (Conmon_CreateContainerRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return Conmon_CreateContainerRequest_List{l}, err
}

func (s Conmon_CreateContainerRequest_List) At(i int) Conmon_CreateContainerRequest {
	return Conmon_CreateContainerRequest{s.List.Struct(i)}
}

func (s Conmon_CreateContainerRequest_List) Set(i int, v Conmon_CreateContainerRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_CreateContainerRequest_List) String() string {
	str, _ := text.MarshalList(0xba77e3fa3aa9b6ca, s.List)
	return str
}

// Conmon_CreateContainerRequest_Future is a wrapper for a Conmon_CreateContainerRequest promised by a client call.
type Conmon_CreateContainerRequest_Future struct{ *capnp.Future }

func (p Conmon_CreateContainerRequest_Future) Struct() (Conmon_CreateContainerRequest, error) {
	s, err := p.Future.Struct()
	return Conmon_CreateContainerRequest{s}, err
}

type Conmon_CreateContainerResponse struct{ capnp.Struct }

// Conmon_CreateContainerResponse_TypeID is the unique identifier for the type Conmon_CreateContainerResponse.
const Conmon_CreateContainerResponse_TypeID = 0xde3a625e70772b9a

func NewConmon_CreateContainerResponse(s *capnp.Segment) (Conmon_CreateContainerResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Conmon_CreateContainerResponse{st}, err
}

func NewRootConmon_CreateContainerResponse(s *capnp.Segment) (Conmon_CreateContainerResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Conmon_CreateContainerResponse{st}, err
}

func ReadRootConmon_CreateContainerResponse(msg *capnp.Message) (Conmon_CreateContainerResponse, error) {
	root, err := msg.Root()
	return Conmon_CreateContainerResponse{root.Struct()}, err
}

func (s Conmon_CreateContainerResponse) String() string {
	str, _ := text.Marshal(0xde3a625e70772b9a, s.Struct)
	return str
}

func (s Conmon_CreateContainerResponse) ContainerPid() uint32 {
	return s.Struct.Uint32(0)
}

func (s Conmon_CreateContainerResponse) SetContainerPid(v uint32) {
	s.Struct.SetUint32(0, v)
}

// Conmon_CreateContainerResponse_List is a list of Conmon_CreateContainerResponse.
type Conmon_CreateContainerResponse_List struct{ capnp.List }

// NewConmon_CreateContainerResponse creates a new list of Conmon_CreateContainerResponse.
func NewConmon_CreateContainerResponse_List(s *capnp.Segment, sz int32) (Conmon_CreateContainerResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Conmon_CreateContainerResponse_List{l}, err
}

func (s Conmon_CreateContainerResponse_List) At(i int) Conmon_CreateContainerResponse {
	return Conmon_CreateContainerResponse{s.List.Struct(i)}
}

func (s Conmon_CreateContainerResponse_List) Set(i int, v Conmon_CreateContainerResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_CreateContainerResponse_List) String() string {
	str, _ := text.MarshalList(0xde3a625e70772b9a, s.List)
	return str
}

// Conmon_CreateContainerResponse_Future is a wrapper for a Conmon_CreateContainerResponse promised by a client call.
type Conmon_CreateContainerResponse_Future struct{ *capnp.Future }

func (p Conmon_CreateContainerResponse_Future) Struct() (Conmon_CreateContainerResponse, error) {
	s, err := p.Future.Struct()
	return Conmon_CreateContainerResponse{s}, err
}

type Conmon_version_Params struct{ capnp.Struct }

// Conmon_version_Params_TypeID is the unique identifier for the type Conmon_version_Params.
const Conmon_version_Params_TypeID = 0xcc2f70676afee4e7

func NewConmon_version_Params(s *capnp.Segment) (Conmon_version_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Conmon_version_Params{st}, err
}

func NewRootConmon_version_Params(s *capnp.Segment) (Conmon_version_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Conmon_version_Params{st}, err
}

func ReadRootConmon_version_Params(msg *capnp.Message) (Conmon_version_Params, error) {
	root, err := msg.Root()
	return Conmon_version_Params{root.Struct()}, err
}

func (s Conmon_version_Params) String() string {
	str, _ := text.Marshal(0xcc2f70676afee4e7, s.Struct)
	return str
}

// Conmon_version_Params_List is a list of Conmon_version_Params.
type Conmon_version_Params_List struct{ capnp.List }

// NewConmon_version_Params creates a new list of Conmon_version_Params.
func NewConmon_version_Params_List(s *capnp.Segment, sz int32) (Conmon_version_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Conmon_version_Params_List{l}, err
}

func (s Conmon_version_Params_List) At(i int) Conmon_version_Params {
	return Conmon_version_Params{s.List.Struct(i)}
}

func (s Conmon_version_Params_List) Set(i int, v Conmon_version_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_version_Params_List) String() string {
	str, _ := text.MarshalList(0xcc2f70676afee4e7, s.List)
	return str
}

// Conmon_version_Params_Future is a wrapper for a Conmon_version_Params promised by a client call.
type Conmon_version_Params_Future struct{ *capnp.Future }

func (p Conmon_version_Params_Future) Struct() (Conmon_version_Params, error) {
	s, err := p.Future.Struct()
	return Conmon_version_Params{s}, err
}

type Conmon_version_Results struct{ capnp.Struct }

// Conmon_version_Results_TypeID is the unique identifier for the type Conmon_version_Results.
const Conmon_version_Results_TypeID = 0xe313695ea9477b30

func NewConmon_version_Results(s *capnp.Segment) (Conmon_version_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_version_Results{st}, err
}

func NewRootConmon_version_Results(s *capnp.Segment) (Conmon_version_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_version_Results{st}, err
}

func ReadRootConmon_version_Results(msg *capnp.Message) (Conmon_version_Results, error) {
	root, err := msg.Root()
	return Conmon_version_Results{root.Struct()}, err
}

func (s Conmon_version_Results) String() string {
	str, _ := text.Marshal(0xe313695ea9477b30, s.Struct)
	return str
}

func (s Conmon_version_Results) Response() (Conmon_VersionResponse, error) {
	p, err := s.Struct.Ptr(0)
	return Conmon_VersionResponse{Struct: p.Struct()}, err
}

func (s Conmon_version_Results) HasResponse() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_version_Results) SetResponse(v Conmon_VersionResponse) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResponse sets the response field to a newly
// allocated Conmon_VersionResponse struct, preferring placement in s's segment.
func (s Conmon_version_Results) NewResponse() (Conmon_VersionResponse, error) {
	ss, err := NewConmon_VersionResponse(s.Struct.Segment())
	if err != nil {
		return Conmon_VersionResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Conmon_version_Results_List is a list of Conmon_version_Results.
type Conmon_version_Results_List struct{ capnp.List }

// NewConmon_version_Results creates a new list of Conmon_version_Results.
func NewConmon_version_Results_List(s *capnp.Segment, sz int32) (Conmon_version_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Conmon_version_Results_List{l}, err
}

func (s Conmon_version_Results_List) At(i int) Conmon_version_Results {
	return Conmon_version_Results{s.List.Struct(i)}
}

func (s Conmon_version_Results_List) Set(i int, v Conmon_version_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_version_Results_List) String() string {
	str, _ := text.MarshalList(0xe313695ea9477b30, s.List)
	return str
}

// Conmon_version_Results_Future is a wrapper for a Conmon_version_Results promised by a client call.
type Conmon_version_Results_Future struct{ *capnp.Future }

func (p Conmon_version_Results_Future) Struct() (Conmon_version_Results, error) {
	s, err := p.Future.Struct()
	return Conmon_version_Results{s}, err
}

func (p Conmon_version_Results_Future) Response() Conmon_VersionResponse_Future {
	return Conmon_VersionResponse_Future{Future: p.Future.Field(0, nil)}
}

type Conmon_createContainer_Params struct{ capnp.Struct }

// Conmon_createContainer_Params_TypeID is the unique identifier for the type Conmon_createContainer_Params.
const Conmon_createContainer_Params_TypeID = 0xf44732c48f949ab8

func NewConmon_createContainer_Params(s *capnp.Segment) (Conmon_createContainer_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_createContainer_Params{st}, err
}

func NewRootConmon_createContainer_Params(s *capnp.Segment) (Conmon_createContainer_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_createContainer_Params{st}, err
}

func ReadRootConmon_createContainer_Params(msg *capnp.Message) (Conmon_createContainer_Params, error) {
	root, err := msg.Root()
	return Conmon_createContainer_Params{root.Struct()}, err
}

func (s Conmon_createContainer_Params) String() string {
	str, _ := text.Marshal(0xf44732c48f949ab8, s.Struct)
	return str
}

func (s Conmon_createContainer_Params) Request() (Conmon_CreateContainerRequest, error) {
	p, err := s.Struct.Ptr(0)
	return Conmon_CreateContainerRequest{Struct: p.Struct()}, err
}

func (s Conmon_createContainer_Params) HasRequest() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_createContainer_Params) SetRequest(v Conmon_CreateContainerRequest) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRequest sets the request field to a newly
// allocated Conmon_CreateContainerRequest struct, preferring placement in s's segment.
func (s Conmon_createContainer_Params) NewRequest() (Conmon_CreateContainerRequest, error) {
	ss, err := NewConmon_CreateContainerRequest(s.Struct.Segment())
	if err != nil {
		return Conmon_CreateContainerRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Conmon_createContainer_Params_List is a list of Conmon_createContainer_Params.
type Conmon_createContainer_Params_List struct{ capnp.List }

// NewConmon_createContainer_Params creates a new list of Conmon_createContainer_Params.
func NewConmon_createContainer_Params_List(s *capnp.Segment, sz int32) (Conmon_createContainer_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Conmon_createContainer_Params_List{l}, err
}

func (s Conmon_createContainer_Params_List) At(i int) Conmon_createContainer_Params {
	return Conmon_createContainer_Params{s.List.Struct(i)}
}

func (s Conmon_createContainer_Params_List) Set(i int, v Conmon_createContainer_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_createContainer_Params_List) String() string {
	str, _ := text.MarshalList(0xf44732c48f949ab8, s.List)
	return str
}

// Conmon_createContainer_Params_Future is a wrapper for a Conmon_createContainer_Params promised by a client call.
type Conmon_createContainer_Params_Future struct{ *capnp.Future }

func (p Conmon_createContainer_Params_Future) Struct() (Conmon_createContainer_Params, error) {
	s, err := p.Future.Struct()
	return Conmon_createContainer_Params{s}, err
}

func (p Conmon_createContainer_Params_Future) Request() Conmon_CreateContainerRequest_Future {
	return Conmon_CreateContainerRequest_Future{Future: p.Future.Field(0, nil)}
}

type Conmon_createContainer_Results struct{ capnp.Struct }

// Conmon_createContainer_Results_TypeID is the unique identifier for the type Conmon_createContainer_Results.
const Conmon_createContainer_Results_TypeID = 0xceba3c1a97be15f8

func NewConmon_createContainer_Results(s *capnp.Segment) (Conmon_createContainer_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_createContainer_Results{st}, err
}

func NewRootConmon_createContainer_Results(s *capnp.Segment) (Conmon_createContainer_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_createContainer_Results{st}, err
}

func ReadRootConmon_createContainer_Results(msg *capnp.Message) (Conmon_createContainer_Results, error) {
	root, err := msg.Root()
	return Conmon_createContainer_Results{root.Struct()}, err
}

func (s Conmon_createContainer_Results) String() string {
	str, _ := text.Marshal(0xceba3c1a97be15f8, s.Struct)
	return str
}

func (s Conmon_createContainer_Results) Response() (Conmon_CreateContainerResponse, error) {
	p, err := s.Struct.Ptr(0)
	return Conmon_CreateContainerResponse{Struct: p.Struct()}, err
}

func (s Conmon_createContainer_Results) HasResponse() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_createContainer_Results) SetResponse(v Conmon_CreateContainerResponse) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResponse sets the response field to a newly
// allocated Conmon_CreateContainerResponse struct, preferring placement in s's segment.
func (s Conmon_createContainer_Results) NewResponse() (Conmon_CreateContainerResponse, error) {
	ss, err := NewConmon_CreateContainerResponse(s.Struct.Segment())
	if err != nil {
		return Conmon_CreateContainerResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Conmon_createContainer_Results_List is a list of Conmon_createContainer_Results.
type Conmon_createContainer_Results_List struct{ capnp.List }

// NewConmon_createContainer_Results creates a new list of Conmon_createContainer_Results.
func NewConmon_createContainer_Results_List(s *capnp.Segment, sz int32) (Conmon_createContainer_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Conmon_createContainer_Results_List{l}, err
}

func (s Conmon_createContainer_Results_List) At(i int) Conmon_createContainer_Results {
	return Conmon_createContainer_Results{s.List.Struct(i)}
}

func (s Conmon_createContainer_Results_List) Set(i int, v Conmon_createContainer_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_createContainer_Results_List) String() string {
	str, _ := text.MarshalList(0xceba3c1a97be15f8, s.List)
	return str
}

// Conmon_createContainer_Results_Future is a wrapper for a Conmon_createContainer_Results promised by a client call.
type Conmon_createContainer_Results_Future struct{ *capnp.Future }

func (p Conmon_createContainer_Results_Future) Struct() (Conmon_createContainer_Results, error) {
	s, err := p.Future.Struct()
	return Conmon_createContainer_Results{s}, err
}

func (p Conmon_createContainer_Results_Future) Response() Conmon_CreateContainerResponse_Future {
	return Conmon_CreateContainerResponse_Future{Future: p.Future.Field(0, nil)}
}

const schema_ffaaf7385bc4adad = "x\xda\xa4T\xcf\x8b\x1cE\x18}\xaf\xaa;3\x87\xd9" +
	"8\x95\x9e\x80\xce% +\x1e\x96dv\xddCd\x10" +
	"f\xcd\x0aAE\x98\x9a\x83\x87(\x81\xde\x996\xdba" +
	"\xa6{\xec\xee1+\x1a\xa2A1\x01\xc1\x08\x09\x92\xa0" +
	"\x7f@\xc4\\\xfd\xb1\x07\x0f\xb2\x07Q\x11\x14<\xb8\xa0" +
	"\x97U\xd6\x93 \x0a\xba\x1el\xa9\x99\xe9\x99v/\xee" +
	"fo\xcd\xd7_\xbd\xf7\xbd\xf7\xbd\xaa\xf9\xcf\xb9$\x16" +
	"\xec\x07-@\xcf\xdb\x87\xd2\xdf\x16\x9f\xfb\xe1\xe6/'" +
	"?\x82\x9a\x95\xe9\x9d;\x1b\xcf<\xfc\xe7\xfb)\xc0\xc5" +
	"\x1d\x9e\xa13#N\x02\xce\xa3\xe2\x0d\xe7\x86(\x00\xe9" +
	"\x17\x1f\xde\xae\xff\xbdua\x1dz\x8e\x9c\x9e\xb5e\x01" +
	"X\xbc(\x8e\x08\xe7=\xd3\xe7\xdc\x14\xdb`\xba\xfd\xd3" +
	"?\xe7\xcf\xf5k_A\xcd\x11\xb0L\xcfU\xf9-a" +
	"\xa5\x7f\x1d\xfd\xf4\x9d\xea#\xeb_\x8f\xfe\xd8\x1c\x1e\x97" +
	"U\x01:7d\x03Lo\xcd]\xe8\x9f]\xa9\xff\xb8" +
	"\x8bh\x88\xf1\x89\xac\x0a\xe7{C\xe9|7l\x9e\x7f" +
	"\xe9\xf4\xed\xb3\xbe\xb3\x95G\xdb\x91\x9b\x04\x9d\x19\xcb4" +
	"|\xf3\xeb\xb1\x0f\xbe\xfc\xf9\xc9\xdfMCnj\xdb4" +
	".X\x9bt\x9e\x1a\x02?n\x1d#\x98~|\xeb\xfa" +
	"[\x1b\x0f\x9d\xfe#\x0f\xe7\xdaG\xccp/\xda\x0d\x1c" +
	"O\xdba\xd0\x0b\x83\xe3\x91\x15\xd7\xdaa\xaf\x17\x06\xb5" +
	"~\x14&amT?\xd1v\xfbA\xbf\xbe\x1c\x06=" +
	"\x19\x06\xba\xc4<\xbf\xba<\xf5P\xa9\xf5\xa9Nu\xf4" +
	"\xb3\xf4i/\x8a\xfd0hI/\xee\x87A\xeca9" +
	"\xf2\xdc\xc4[\x0e\x83\xc4\xf5\x03/j5\xbc\xe7\x07^" +
	"\x9c\xa4Y]d?\xb2\x03\xba(m`b<3g" +
	"\xd4\xc2)\x08\xf5@\x81Su\xccv\xa0\xee\xbb\x0c\xa1" +
	"T\xe1\xd2\x0b#\xfa%\xa6\xed1>\xc7\xf8Xb\x93" +
	"\x9c\xe8.\xfc\x9f\xee08\xb1{\xf4\xe1\xe4L\x9a\xa4" +
	".K\x0b\xb0\x08(\xb7\x0a\xe8g%\xf5\xaa\xa0\"+" +
	"4E\xef\x0c\xa0;\x92\xba/HQ\xa1\x00T\xef\x09" +
	"@w%\xf5\x9a\xa0\x92\xa2B\x09\xa8A\x0b\xd0\x89\xa4" +
	"\xbe&(\xfd\x0eK\x10,\x81\xe9\xca \xe8t\xbd\xa6" +
	"\x0b\x99\xacN\x8a\x89\x17\xf5\xfc\xc0\xed\x02 !h\x16" +
	"\xed\xad\xf9I\xd3MV\xc1\x98\x87\xc1\xa6\xe4\xb0\xfd0" +
	"\xa6R\x0f\xedA\xea\xd8\xb7\xd9\xa6\x1b\xb9=\xc6\xfb\xb2" +
	"\xa9\xfd_\x9bf[^<\xe8\xca$\xd6\xd6\xc4\xa4\x19" +
	"\xa3\xbd$\xa9\xef\x15L\xa3l\xd3\x00\xcb\xd3\xf4\x80," +
	"\xe3\x80\x0b2\xc02\xf6\xcc\x86r\xe4\xe7s\xe4\xedq" +
	"3\xee\x89\x9a~\x87E\x08\x16\xef\xd2\xab\xfd\xe9\x9c\xdc" +
	"\x9f]:\xf7\xc2\x98]\xaa\xbc\xbe\xca\x84\xf4\xe2)@" +
	"\xafI\xea\xd7r\x09|\xf5~@\xbf,\xa9\xaf\x08*" +
	"1\x8e\xe0\xebu@\xbf\"\xa9\xdf4\x11\x94\xa3\x08^" +
	"5\x11\xbc\"\xa9\xaf\x0b*\xcb\xaa\xd0\x02\xd4\xdb+\x80" +
	"\xbe&\xa9\xdf\x15\xcc.U\x96\xc3B\xe2\x9e\xcb\xbe\x1b" +
	"fv?\xc9\xe5\xd6\xefv\x1es\x13\xd0\x9b\xd4\xa2A" +
	"\x9c\x18\x05(\xe4@\x0e\x94\xb0qJ\xf3\xc6\x1b\x0f\x8a" +
	"\x92\xba\"x)\x1a=1,O\xdf\xa9\x91\xe9\xff\x06" +
	"\x00\x00\xff\xff\xa5\x83\xd3\xdf"

func init() {
	schemas.Register(schema_ffaaf7385bc4adad,
		0xb737e899dd6633f1,
		0xba77e3fa3aa9b6ca,
		0xcc2f70676afee4e7,
		0xceba3c1a97be15f8,
		0xde3a625e70772b9a,
		0xe313695ea9477b30,
		0xf34be5cbac1feed1,
		0xf44732c48f949ab8)
}
