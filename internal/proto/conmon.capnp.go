// Code generated by capnpc-go. DO NOT EDIT.

package proto

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
)

type Conmon struct{ Client *capnp.Client }

// Conmon_TypeID is the unique identifier for the type Conmon.
const Conmon_TypeID = 0xb737e899dd6633f1

func (c Conmon) Version(ctx context.Context, params func(Conmon_version_Params) error) (Conmon_version_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      0,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "version",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Conmon_version_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Conmon_version_Results_Future{Future: ans.Future()}, release
}
func (c Conmon) CreateContainer(ctx context.Context, params func(Conmon_createContainer_Params) error) (Conmon_createContainer_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      1,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "createContainer",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Conmon_createContainer_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Conmon_createContainer_Results_Future{Future: ans.Future()}, release
}
func (c Conmon) ExecSyncContainer(ctx context.Context, params func(Conmon_execSyncContainer_Params) error) (Conmon_execSyncContainer_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      2,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "execSyncContainer",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Conmon_execSyncContainer_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Conmon_execSyncContainer_Results_Future{Future: ans.Future()}, release
}

func (c Conmon) AddRef() Conmon {
	return Conmon{
		Client: c.Client.AddRef(),
	}
}

func (c Conmon) Release() {
	c.Client.Release()
}

// A Conmon_Server is a Conmon with a local implementation.
type Conmon_Server interface {
	Version(context.Context, Conmon_version) error

	CreateContainer(context.Context, Conmon_createContainer) error

	ExecSyncContainer(context.Context, Conmon_execSyncContainer) error
}

// Conmon_NewServer creates a new Server from an implementation of Conmon_Server.
func Conmon_NewServer(s Conmon_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Conmon_Methods(nil, s), s, c, policy)
}

// Conmon_ServerToClient creates a new Client from an implementation of Conmon_Server.
// The caller is responsible for calling Release on the returned Client.
func Conmon_ServerToClient(s Conmon_Server, policy *server.Policy) Conmon {
	return Conmon{Client: capnp.NewClient(Conmon_NewServer(s, policy))}
}

// Conmon_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Conmon_Methods(methods []server.Method, s Conmon_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 3)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      0,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "version",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Version(ctx, Conmon_version{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      1,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "createContainer",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.CreateContainer(ctx, Conmon_createContainer{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      2,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "execSyncContainer",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ExecSyncContainer(ctx, Conmon_execSyncContainer{call})
		},
	})

	return methods
}

// Conmon_version holds the state for a server call to Conmon.version.
// See server.Call for documentation.
type Conmon_version struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Conmon_version) Args() Conmon_version_Params {
	return Conmon_version_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Conmon_version) AllocResults() (Conmon_version_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_version_Results{Struct: r}, err
}

// Conmon_createContainer holds the state for a server call to Conmon.createContainer.
// See server.Call for documentation.
type Conmon_createContainer struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Conmon_createContainer) Args() Conmon_createContainer_Params {
	return Conmon_createContainer_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Conmon_createContainer) AllocResults() (Conmon_createContainer_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_createContainer_Results{Struct: r}, err
}

// Conmon_execSyncContainer holds the state for a server call to Conmon.execSyncContainer.
// See server.Call for documentation.
type Conmon_execSyncContainer struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Conmon_execSyncContainer) Args() Conmon_execSyncContainer_Params {
	return Conmon_execSyncContainer_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Conmon_execSyncContainer) AllocResults() (Conmon_execSyncContainer_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_execSyncContainer_Results{Struct: r}, err
}

type Conmon_VersionResponse struct{ capnp.Struct }

// Conmon_VersionResponse_TypeID is the unique identifier for the type Conmon_VersionResponse.
const Conmon_VersionResponse_TypeID = 0xf34be5cbac1feed1

func NewConmon_VersionResponse(s *capnp.Segment) (Conmon_VersionResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return Conmon_VersionResponse{st}, err
}

func NewRootConmon_VersionResponse(s *capnp.Segment) (Conmon_VersionResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return Conmon_VersionResponse{st}, err
}

func ReadRootConmon_VersionResponse(msg *capnp.Message) (Conmon_VersionResponse, error) {
	root, err := msg.Root()
	return Conmon_VersionResponse{root.Struct()}, err
}

func (s Conmon_VersionResponse) String() string {
	str, _ := text.Marshal(0xf34be5cbac1feed1, s.Struct)
	return str
}

func (s Conmon_VersionResponse) Version() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Conmon_VersionResponse) HasVersion() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_VersionResponse) VersionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Conmon_VersionResponse) SetVersion(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Conmon_VersionResponse) Tag() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Conmon_VersionResponse) HasTag() bool {
	return s.Struct.HasPtr(1)
}

func (s Conmon_VersionResponse) TagBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Conmon_VersionResponse) SetTag(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Conmon_VersionResponse) Commit() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Conmon_VersionResponse) HasCommit() bool {
	return s.Struct.HasPtr(2)
}

func (s Conmon_VersionResponse) CommitBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Conmon_VersionResponse) SetCommit(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Conmon_VersionResponse) BuildDate() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Conmon_VersionResponse) HasBuildDate() bool {
	return s.Struct.HasPtr(3)
}

func (s Conmon_VersionResponse) BuildDateBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Conmon_VersionResponse) SetBuildDate(v string) error {
	return s.Struct.SetText(3, v)
}

func (s Conmon_VersionResponse) RustVersion() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s Conmon_VersionResponse) HasRustVersion() bool {
	return s.Struct.HasPtr(4)
}

func (s Conmon_VersionResponse) RustVersionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s Conmon_VersionResponse) SetRustVersion(v string) error {
	return s.Struct.SetText(4, v)
}

// Conmon_VersionResponse_List is a list of Conmon_VersionResponse.
type Conmon_VersionResponse_List struct{ capnp.List }

// NewConmon_VersionResponse creates a new list of Conmon_VersionResponse.
func NewConmon_VersionResponse_List(s *capnp.Segment, sz int32) (Conmon_VersionResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5}, sz)
	return Conmon_VersionResponse_List{l}, err
}

func (s Conmon_VersionResponse_List) At(i int) Conmon_VersionResponse {
	return Conmon_VersionResponse{s.List.Struct(i)}
}

func (s Conmon_VersionResponse_List) Set(i int, v Conmon_VersionResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_VersionResponse_List) String() string {
	str, _ := text.MarshalList(0xf34be5cbac1feed1, s.List)
	return str
}

// Conmon_VersionResponse_Future is a wrapper for a Conmon_VersionResponse promised by a client call.
type Conmon_VersionResponse_Future struct{ *capnp.Future }

func (p Conmon_VersionResponse_Future) Struct() (Conmon_VersionResponse, error) {
	s, err := p.Future.Struct()
	return Conmon_VersionResponse{s}, err
}

type Conmon_CreateContainerRequest struct{ capnp.Struct }

// Conmon_CreateContainerRequest_TypeID is the unique identifier for the type Conmon_CreateContainerRequest.
const Conmon_CreateContainerRequest_TypeID = 0xba77e3fa3aa9b6ca

func NewConmon_CreateContainerRequest(s *capnp.Segment) (Conmon_CreateContainerRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Conmon_CreateContainerRequest{st}, err
}

func NewRootConmon_CreateContainerRequest(s *capnp.Segment) (Conmon_CreateContainerRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Conmon_CreateContainerRequest{st}, err
}

func ReadRootConmon_CreateContainerRequest(msg *capnp.Message) (Conmon_CreateContainerRequest, error) {
	root, err := msg.Root()
	return Conmon_CreateContainerRequest{root.Struct()}, err
}

func (s Conmon_CreateContainerRequest) String() string {
	str, _ := text.Marshal(0xba77e3fa3aa9b6ca, s.Struct)
	return str
}

func (s Conmon_CreateContainerRequest) Id() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Conmon_CreateContainerRequest) HasId() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_CreateContainerRequest) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Conmon_CreateContainerRequest) SetId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Conmon_CreateContainerRequest) BundlePath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Conmon_CreateContainerRequest) HasBundlePath() bool {
	return s.Struct.HasPtr(1)
}

func (s Conmon_CreateContainerRequest) BundlePathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Conmon_CreateContainerRequest) SetBundlePath(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Conmon_CreateContainerRequest) Terminal() bool {
	return s.Struct.Bit(0)
}

func (s Conmon_CreateContainerRequest) SetTerminal(v bool) {
	s.Struct.SetBit(0, v)
}

func (s Conmon_CreateContainerRequest) ExitPaths() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.TextList{List: p.List()}, err
}

func (s Conmon_CreateContainerRequest) HasExitPaths() bool {
	return s.Struct.HasPtr(2)
}

func (s Conmon_CreateContainerRequest) SetExitPaths(v capnp.TextList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewExitPaths sets the exitPaths field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Conmon_CreateContainerRequest) NewExitPaths(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

// Conmon_CreateContainerRequest_List is a list of Conmon_CreateContainerRequest.
type Conmon_CreateContainerRequest_List struct{ capnp.List }

// NewConmon_CreateContainerRequest creates a new list of Conmon_CreateContainerRequest.
func NewConmon_CreateContainerRequest_List(s *capnp.Segment, sz int32) (Conmon_CreateContainerRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return Conmon_CreateContainerRequest_List{l}, err
}

func (s Conmon_CreateContainerRequest_List) At(i int) Conmon_CreateContainerRequest {
	return Conmon_CreateContainerRequest{s.List.Struct(i)}
}

func (s Conmon_CreateContainerRequest_List) Set(i int, v Conmon_CreateContainerRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_CreateContainerRequest_List) String() string {
	str, _ := text.MarshalList(0xba77e3fa3aa9b6ca, s.List)
	return str
}

// Conmon_CreateContainerRequest_Future is a wrapper for a Conmon_CreateContainerRequest promised by a client call.
type Conmon_CreateContainerRequest_Future struct{ *capnp.Future }

func (p Conmon_CreateContainerRequest_Future) Struct() (Conmon_CreateContainerRequest, error) {
	s, err := p.Future.Struct()
	return Conmon_CreateContainerRequest{s}, err
}

type Conmon_CreateContainerResponse struct{ capnp.Struct }

// Conmon_CreateContainerResponse_TypeID is the unique identifier for the type Conmon_CreateContainerResponse.
const Conmon_CreateContainerResponse_TypeID = 0xde3a625e70772b9a

func NewConmon_CreateContainerResponse(s *capnp.Segment) (Conmon_CreateContainerResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Conmon_CreateContainerResponse{st}, err
}

func NewRootConmon_CreateContainerResponse(s *capnp.Segment) (Conmon_CreateContainerResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Conmon_CreateContainerResponse{st}, err
}

func ReadRootConmon_CreateContainerResponse(msg *capnp.Message) (Conmon_CreateContainerResponse, error) {
	root, err := msg.Root()
	return Conmon_CreateContainerResponse{root.Struct()}, err
}

func (s Conmon_CreateContainerResponse) String() string {
	str, _ := text.Marshal(0xde3a625e70772b9a, s.Struct)
	return str
}

func (s Conmon_CreateContainerResponse) ContainerPid() uint32 {
	return s.Struct.Uint32(0)
}

func (s Conmon_CreateContainerResponse) SetContainerPid(v uint32) {
	s.Struct.SetUint32(0, v)
}

// Conmon_CreateContainerResponse_List is a list of Conmon_CreateContainerResponse.
type Conmon_CreateContainerResponse_List struct{ capnp.List }

// NewConmon_CreateContainerResponse creates a new list of Conmon_CreateContainerResponse.
func NewConmon_CreateContainerResponse_List(s *capnp.Segment, sz int32) (Conmon_CreateContainerResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Conmon_CreateContainerResponse_List{l}, err
}

func (s Conmon_CreateContainerResponse_List) At(i int) Conmon_CreateContainerResponse {
	return Conmon_CreateContainerResponse{s.List.Struct(i)}
}

func (s Conmon_CreateContainerResponse_List) Set(i int, v Conmon_CreateContainerResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_CreateContainerResponse_List) String() string {
	str, _ := text.MarshalList(0xde3a625e70772b9a, s.List)
	return str
}

// Conmon_CreateContainerResponse_Future is a wrapper for a Conmon_CreateContainerResponse promised by a client call.
type Conmon_CreateContainerResponse_Future struct{ *capnp.Future }

func (p Conmon_CreateContainerResponse_Future) Struct() (Conmon_CreateContainerResponse, error) {
	s, err := p.Future.Struct()
	return Conmon_CreateContainerResponse{s}, err
}

type Conmon_ExecSyncContainerRequest struct{ capnp.Struct }

// Conmon_ExecSyncContainerRequest_TypeID is the unique identifier for the type Conmon_ExecSyncContainerRequest.
const Conmon_ExecSyncContainerRequest_TypeID = 0xf41122f890a371a6

func NewConmon_ExecSyncContainerRequest(s *capnp.Segment) (Conmon_ExecSyncContainerRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Conmon_ExecSyncContainerRequest{st}, err
}

func NewRootConmon_ExecSyncContainerRequest(s *capnp.Segment) (Conmon_ExecSyncContainerRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Conmon_ExecSyncContainerRequest{st}, err
}

func ReadRootConmon_ExecSyncContainerRequest(msg *capnp.Message) (Conmon_ExecSyncContainerRequest, error) {
	root, err := msg.Root()
	return Conmon_ExecSyncContainerRequest{root.Struct()}, err
}

func (s Conmon_ExecSyncContainerRequest) String() string {
	str, _ := text.Marshal(0xf41122f890a371a6, s.Struct)
	return str
}

func (s Conmon_ExecSyncContainerRequest) Id() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Conmon_ExecSyncContainerRequest) HasId() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_ExecSyncContainerRequest) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Conmon_ExecSyncContainerRequest) SetId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Conmon_ExecSyncContainerRequest) TimeoutSec() uint64 {
	return s.Struct.Uint64(0)
}

func (s Conmon_ExecSyncContainerRequest) SetTimeoutSec(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Conmon_ExecSyncContainerRequest) Command() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.TextList{List: p.List()}, err
}

func (s Conmon_ExecSyncContainerRequest) HasCommand() bool {
	return s.Struct.HasPtr(1)
}

func (s Conmon_ExecSyncContainerRequest) SetCommand(v capnp.TextList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewCommand sets the command field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Conmon_ExecSyncContainerRequest) NewCommand(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s Conmon_ExecSyncContainerRequest) Terminal() bool {
	return s.Struct.Bit(64)
}

func (s Conmon_ExecSyncContainerRequest) SetTerminal(v bool) {
	s.Struct.SetBit(64, v)
}

// Conmon_ExecSyncContainerRequest_List is a list of Conmon_ExecSyncContainerRequest.
type Conmon_ExecSyncContainerRequest_List struct{ capnp.List }

// NewConmon_ExecSyncContainerRequest creates a new list of Conmon_ExecSyncContainerRequest.
func NewConmon_ExecSyncContainerRequest_List(s *capnp.Segment, sz int32) (Conmon_ExecSyncContainerRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2}, sz)
	return Conmon_ExecSyncContainerRequest_List{l}, err
}

func (s Conmon_ExecSyncContainerRequest_List) At(i int) Conmon_ExecSyncContainerRequest {
	return Conmon_ExecSyncContainerRequest{s.List.Struct(i)}
}

func (s Conmon_ExecSyncContainerRequest_List) Set(i int, v Conmon_ExecSyncContainerRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_ExecSyncContainerRequest_List) String() string {
	str, _ := text.MarshalList(0xf41122f890a371a6, s.List)
	return str
}

// Conmon_ExecSyncContainerRequest_Future is a wrapper for a Conmon_ExecSyncContainerRequest promised by a client call.
type Conmon_ExecSyncContainerRequest_Future struct{ *capnp.Future }

func (p Conmon_ExecSyncContainerRequest_Future) Struct() (Conmon_ExecSyncContainerRequest, error) {
	s, err := p.Future.Struct()
	return Conmon_ExecSyncContainerRequest{s}, err
}

type Conmon_ExecSyncContainerResponse struct{ capnp.Struct }

// Conmon_ExecSyncContainerResponse_TypeID is the unique identifier for the type Conmon_ExecSyncContainerResponse.
const Conmon_ExecSyncContainerResponse_TypeID = 0xd9d61d1d803c85fc

func NewConmon_ExecSyncContainerResponse(s *capnp.Segment) (Conmon_ExecSyncContainerResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Conmon_ExecSyncContainerResponse{st}, err
}

func NewRootConmon_ExecSyncContainerResponse(s *capnp.Segment) (Conmon_ExecSyncContainerResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Conmon_ExecSyncContainerResponse{st}, err
}

func ReadRootConmon_ExecSyncContainerResponse(msg *capnp.Message) (Conmon_ExecSyncContainerResponse, error) {
	root, err := msg.Root()
	return Conmon_ExecSyncContainerResponse{root.Struct()}, err
}

func (s Conmon_ExecSyncContainerResponse) String() string {
	str, _ := text.Marshal(0xd9d61d1d803c85fc, s.Struct)
	return str
}

func (s Conmon_ExecSyncContainerResponse) ExitCode() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s Conmon_ExecSyncContainerResponse) SetExitCode(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

func (s Conmon_ExecSyncContainerResponse) Stdout() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Conmon_ExecSyncContainerResponse) HasStdout() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_ExecSyncContainerResponse) SetStdout(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s Conmon_ExecSyncContainerResponse) Stderr() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s Conmon_ExecSyncContainerResponse) HasStderr() bool {
	return s.Struct.HasPtr(1)
}

func (s Conmon_ExecSyncContainerResponse) SetStderr(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s Conmon_ExecSyncContainerResponse) TimedOut() bool {
	return s.Struct.Bit(32)
}

func (s Conmon_ExecSyncContainerResponse) SetTimedOut(v bool) {
	s.Struct.SetBit(32, v)
}

// Conmon_ExecSyncContainerResponse_List is a list of Conmon_ExecSyncContainerResponse.
type Conmon_ExecSyncContainerResponse_List struct{ capnp.List }

// NewConmon_ExecSyncContainerResponse creates a new list of Conmon_ExecSyncContainerResponse.
func NewConmon_ExecSyncContainerResponse_List(s *capnp.Segment, sz int32) (Conmon_ExecSyncContainerResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return Conmon_ExecSyncContainerResponse_List{l}, err
}

func (s Conmon_ExecSyncContainerResponse_List) At(i int) Conmon_ExecSyncContainerResponse {
	return Conmon_ExecSyncContainerResponse{s.List.Struct(i)}
}

func (s Conmon_ExecSyncContainerResponse_List) Set(i int, v Conmon_ExecSyncContainerResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_ExecSyncContainerResponse_List) String() string {
	str, _ := text.MarshalList(0xd9d61d1d803c85fc, s.List)
	return str
}

// Conmon_ExecSyncContainerResponse_Future is a wrapper for a Conmon_ExecSyncContainerResponse promised by a client call.
type Conmon_ExecSyncContainerResponse_Future struct{ *capnp.Future }

func (p Conmon_ExecSyncContainerResponse_Future) Struct() (Conmon_ExecSyncContainerResponse, error) {
	s, err := p.Future.Struct()
	return Conmon_ExecSyncContainerResponse{s}, err
}

type Conmon_version_Params struct{ capnp.Struct }

// Conmon_version_Params_TypeID is the unique identifier for the type Conmon_version_Params.
const Conmon_version_Params_TypeID = 0xcc2f70676afee4e7

func NewConmon_version_Params(s *capnp.Segment) (Conmon_version_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Conmon_version_Params{st}, err
}

func NewRootConmon_version_Params(s *capnp.Segment) (Conmon_version_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Conmon_version_Params{st}, err
}

func ReadRootConmon_version_Params(msg *capnp.Message) (Conmon_version_Params, error) {
	root, err := msg.Root()
	return Conmon_version_Params{root.Struct()}, err
}

func (s Conmon_version_Params) String() string {
	str, _ := text.Marshal(0xcc2f70676afee4e7, s.Struct)
	return str
}

// Conmon_version_Params_List is a list of Conmon_version_Params.
type Conmon_version_Params_List struct{ capnp.List }

// NewConmon_version_Params creates a new list of Conmon_version_Params.
func NewConmon_version_Params_List(s *capnp.Segment, sz int32) (Conmon_version_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Conmon_version_Params_List{l}, err
}

func (s Conmon_version_Params_List) At(i int) Conmon_version_Params {
	return Conmon_version_Params{s.List.Struct(i)}
}

func (s Conmon_version_Params_List) Set(i int, v Conmon_version_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_version_Params_List) String() string {
	str, _ := text.MarshalList(0xcc2f70676afee4e7, s.List)
	return str
}

// Conmon_version_Params_Future is a wrapper for a Conmon_version_Params promised by a client call.
type Conmon_version_Params_Future struct{ *capnp.Future }

func (p Conmon_version_Params_Future) Struct() (Conmon_version_Params, error) {
	s, err := p.Future.Struct()
	return Conmon_version_Params{s}, err
}

type Conmon_version_Results struct{ capnp.Struct }

// Conmon_version_Results_TypeID is the unique identifier for the type Conmon_version_Results.
const Conmon_version_Results_TypeID = 0xe313695ea9477b30

func NewConmon_version_Results(s *capnp.Segment) (Conmon_version_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_version_Results{st}, err
}

func NewRootConmon_version_Results(s *capnp.Segment) (Conmon_version_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_version_Results{st}, err
}

func ReadRootConmon_version_Results(msg *capnp.Message) (Conmon_version_Results, error) {
	root, err := msg.Root()
	return Conmon_version_Results{root.Struct()}, err
}

func (s Conmon_version_Results) String() string {
	str, _ := text.Marshal(0xe313695ea9477b30, s.Struct)
	return str
}

func (s Conmon_version_Results) Response() (Conmon_VersionResponse, error) {
	p, err := s.Struct.Ptr(0)
	return Conmon_VersionResponse{Struct: p.Struct()}, err
}

func (s Conmon_version_Results) HasResponse() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_version_Results) SetResponse(v Conmon_VersionResponse) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResponse sets the response field to a newly
// allocated Conmon_VersionResponse struct, preferring placement in s's segment.
func (s Conmon_version_Results) NewResponse() (Conmon_VersionResponse, error) {
	ss, err := NewConmon_VersionResponse(s.Struct.Segment())
	if err != nil {
		return Conmon_VersionResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Conmon_version_Results_List is a list of Conmon_version_Results.
type Conmon_version_Results_List struct{ capnp.List }

// NewConmon_version_Results creates a new list of Conmon_version_Results.
func NewConmon_version_Results_List(s *capnp.Segment, sz int32) (Conmon_version_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Conmon_version_Results_List{l}, err
}

func (s Conmon_version_Results_List) At(i int) Conmon_version_Results {
	return Conmon_version_Results{s.List.Struct(i)}
}

func (s Conmon_version_Results_List) Set(i int, v Conmon_version_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_version_Results_List) String() string {
	str, _ := text.MarshalList(0xe313695ea9477b30, s.List)
	return str
}

// Conmon_version_Results_Future is a wrapper for a Conmon_version_Results promised by a client call.
type Conmon_version_Results_Future struct{ *capnp.Future }

func (p Conmon_version_Results_Future) Struct() (Conmon_version_Results, error) {
	s, err := p.Future.Struct()
	return Conmon_version_Results{s}, err
}

func (p Conmon_version_Results_Future) Response() Conmon_VersionResponse_Future {
	return Conmon_VersionResponse_Future{Future: p.Future.Field(0, nil)}
}

type Conmon_createContainer_Params struct{ capnp.Struct }

// Conmon_createContainer_Params_TypeID is the unique identifier for the type Conmon_createContainer_Params.
const Conmon_createContainer_Params_TypeID = 0xf44732c48f949ab8

func NewConmon_createContainer_Params(s *capnp.Segment) (Conmon_createContainer_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_createContainer_Params{st}, err
}

func NewRootConmon_createContainer_Params(s *capnp.Segment) (Conmon_createContainer_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_createContainer_Params{st}, err
}

func ReadRootConmon_createContainer_Params(msg *capnp.Message) (Conmon_createContainer_Params, error) {
	root, err := msg.Root()
	return Conmon_createContainer_Params{root.Struct()}, err
}

func (s Conmon_createContainer_Params) String() string {
	str, _ := text.Marshal(0xf44732c48f949ab8, s.Struct)
	return str
}

func (s Conmon_createContainer_Params) Request() (Conmon_CreateContainerRequest, error) {
	p, err := s.Struct.Ptr(0)
	return Conmon_CreateContainerRequest{Struct: p.Struct()}, err
}

func (s Conmon_createContainer_Params) HasRequest() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_createContainer_Params) SetRequest(v Conmon_CreateContainerRequest) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRequest sets the request field to a newly
// allocated Conmon_CreateContainerRequest struct, preferring placement in s's segment.
func (s Conmon_createContainer_Params) NewRequest() (Conmon_CreateContainerRequest, error) {
	ss, err := NewConmon_CreateContainerRequest(s.Struct.Segment())
	if err != nil {
		return Conmon_CreateContainerRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Conmon_createContainer_Params_List is a list of Conmon_createContainer_Params.
type Conmon_createContainer_Params_List struct{ capnp.List }

// NewConmon_createContainer_Params creates a new list of Conmon_createContainer_Params.
func NewConmon_createContainer_Params_List(s *capnp.Segment, sz int32) (Conmon_createContainer_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Conmon_createContainer_Params_List{l}, err
}

func (s Conmon_createContainer_Params_List) At(i int) Conmon_createContainer_Params {
	return Conmon_createContainer_Params{s.List.Struct(i)}
}

func (s Conmon_createContainer_Params_List) Set(i int, v Conmon_createContainer_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_createContainer_Params_List) String() string {
	str, _ := text.MarshalList(0xf44732c48f949ab8, s.List)
	return str
}

// Conmon_createContainer_Params_Future is a wrapper for a Conmon_createContainer_Params promised by a client call.
type Conmon_createContainer_Params_Future struct{ *capnp.Future }

func (p Conmon_createContainer_Params_Future) Struct() (Conmon_createContainer_Params, error) {
	s, err := p.Future.Struct()
	return Conmon_createContainer_Params{s}, err
}

func (p Conmon_createContainer_Params_Future) Request() Conmon_CreateContainerRequest_Future {
	return Conmon_CreateContainerRequest_Future{Future: p.Future.Field(0, nil)}
}

type Conmon_createContainer_Results struct{ capnp.Struct }

// Conmon_createContainer_Results_TypeID is the unique identifier for the type Conmon_createContainer_Results.
const Conmon_createContainer_Results_TypeID = 0xceba3c1a97be15f8

func NewConmon_createContainer_Results(s *capnp.Segment) (Conmon_createContainer_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_createContainer_Results{st}, err
}

func NewRootConmon_createContainer_Results(s *capnp.Segment) (Conmon_createContainer_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_createContainer_Results{st}, err
}

func ReadRootConmon_createContainer_Results(msg *capnp.Message) (Conmon_createContainer_Results, error) {
	root, err := msg.Root()
	return Conmon_createContainer_Results{root.Struct()}, err
}

func (s Conmon_createContainer_Results) String() string {
	str, _ := text.Marshal(0xceba3c1a97be15f8, s.Struct)
	return str
}

func (s Conmon_createContainer_Results) Response() (Conmon_CreateContainerResponse, error) {
	p, err := s.Struct.Ptr(0)
	return Conmon_CreateContainerResponse{Struct: p.Struct()}, err
}

func (s Conmon_createContainer_Results) HasResponse() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_createContainer_Results) SetResponse(v Conmon_CreateContainerResponse) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResponse sets the response field to a newly
// allocated Conmon_CreateContainerResponse struct, preferring placement in s's segment.
func (s Conmon_createContainer_Results) NewResponse() (Conmon_CreateContainerResponse, error) {
	ss, err := NewConmon_CreateContainerResponse(s.Struct.Segment())
	if err != nil {
		return Conmon_CreateContainerResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Conmon_createContainer_Results_List is a list of Conmon_createContainer_Results.
type Conmon_createContainer_Results_List struct{ capnp.List }

// NewConmon_createContainer_Results creates a new list of Conmon_createContainer_Results.
func NewConmon_createContainer_Results_List(s *capnp.Segment, sz int32) (Conmon_createContainer_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Conmon_createContainer_Results_List{l}, err
}

func (s Conmon_createContainer_Results_List) At(i int) Conmon_createContainer_Results {
	return Conmon_createContainer_Results{s.List.Struct(i)}
}

func (s Conmon_createContainer_Results_List) Set(i int, v Conmon_createContainer_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_createContainer_Results_List) String() string {
	str, _ := text.MarshalList(0xceba3c1a97be15f8, s.List)
	return str
}

// Conmon_createContainer_Results_Future is a wrapper for a Conmon_createContainer_Results promised by a client call.
type Conmon_createContainer_Results_Future struct{ *capnp.Future }

func (p Conmon_createContainer_Results_Future) Struct() (Conmon_createContainer_Results, error) {
	s, err := p.Future.Struct()
	return Conmon_createContainer_Results{s}, err
}

func (p Conmon_createContainer_Results_Future) Response() Conmon_CreateContainerResponse_Future {
	return Conmon_CreateContainerResponse_Future{Future: p.Future.Field(0, nil)}
}

type Conmon_execSyncContainer_Params struct{ capnp.Struct }

// Conmon_execSyncContainer_Params_TypeID is the unique identifier for the type Conmon_execSyncContainer_Params.
const Conmon_execSyncContainer_Params_TypeID = 0x83479da67279e173

func NewConmon_execSyncContainer_Params(s *capnp.Segment) (Conmon_execSyncContainer_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_execSyncContainer_Params{st}, err
}

func NewRootConmon_execSyncContainer_Params(s *capnp.Segment) (Conmon_execSyncContainer_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_execSyncContainer_Params{st}, err
}

func ReadRootConmon_execSyncContainer_Params(msg *capnp.Message) (Conmon_execSyncContainer_Params, error) {
	root, err := msg.Root()
	return Conmon_execSyncContainer_Params{root.Struct()}, err
}

func (s Conmon_execSyncContainer_Params) String() string {
	str, _ := text.Marshal(0x83479da67279e173, s.Struct)
	return str
}

func (s Conmon_execSyncContainer_Params) Request() (Conmon_ExecSyncContainerRequest, error) {
	p, err := s.Struct.Ptr(0)
	return Conmon_ExecSyncContainerRequest{Struct: p.Struct()}, err
}

func (s Conmon_execSyncContainer_Params) HasRequest() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_execSyncContainer_Params) SetRequest(v Conmon_ExecSyncContainerRequest) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRequest sets the request field to a newly
// allocated Conmon_ExecSyncContainerRequest struct, preferring placement in s's segment.
func (s Conmon_execSyncContainer_Params) NewRequest() (Conmon_ExecSyncContainerRequest, error) {
	ss, err := NewConmon_ExecSyncContainerRequest(s.Struct.Segment())
	if err != nil {
		return Conmon_ExecSyncContainerRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Conmon_execSyncContainer_Params_List is a list of Conmon_execSyncContainer_Params.
type Conmon_execSyncContainer_Params_List struct{ capnp.List }

// NewConmon_execSyncContainer_Params creates a new list of Conmon_execSyncContainer_Params.
func NewConmon_execSyncContainer_Params_List(s *capnp.Segment, sz int32) (Conmon_execSyncContainer_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Conmon_execSyncContainer_Params_List{l}, err
}

func (s Conmon_execSyncContainer_Params_List) At(i int) Conmon_execSyncContainer_Params {
	return Conmon_execSyncContainer_Params{s.List.Struct(i)}
}

func (s Conmon_execSyncContainer_Params_List) Set(i int, v Conmon_execSyncContainer_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_execSyncContainer_Params_List) String() string {
	str, _ := text.MarshalList(0x83479da67279e173, s.List)
	return str
}

// Conmon_execSyncContainer_Params_Future is a wrapper for a Conmon_execSyncContainer_Params promised by a client call.
type Conmon_execSyncContainer_Params_Future struct{ *capnp.Future }

func (p Conmon_execSyncContainer_Params_Future) Struct() (Conmon_execSyncContainer_Params, error) {
	s, err := p.Future.Struct()
	return Conmon_execSyncContainer_Params{s}, err
}

func (p Conmon_execSyncContainer_Params_Future) Request() Conmon_ExecSyncContainerRequest_Future {
	return Conmon_ExecSyncContainerRequest_Future{Future: p.Future.Field(0, nil)}
}

type Conmon_execSyncContainer_Results struct{ capnp.Struct }

// Conmon_execSyncContainer_Results_TypeID is the unique identifier for the type Conmon_execSyncContainer_Results.
const Conmon_execSyncContainer_Results_TypeID = 0xf8e86a5c0baa01bc

func NewConmon_execSyncContainer_Results(s *capnp.Segment) (Conmon_execSyncContainer_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_execSyncContainer_Results{st}, err
}

func NewRootConmon_execSyncContainer_Results(s *capnp.Segment) (Conmon_execSyncContainer_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_execSyncContainer_Results{st}, err
}

func ReadRootConmon_execSyncContainer_Results(msg *capnp.Message) (Conmon_execSyncContainer_Results, error) {
	root, err := msg.Root()
	return Conmon_execSyncContainer_Results{root.Struct()}, err
}

func (s Conmon_execSyncContainer_Results) String() string {
	str, _ := text.Marshal(0xf8e86a5c0baa01bc, s.Struct)
	return str
}

func (s Conmon_execSyncContainer_Results) Response() (Conmon_ExecSyncContainerResponse, error) {
	p, err := s.Struct.Ptr(0)
	return Conmon_ExecSyncContainerResponse{Struct: p.Struct()}, err
}

func (s Conmon_execSyncContainer_Results) HasResponse() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_execSyncContainer_Results) SetResponse(v Conmon_ExecSyncContainerResponse) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResponse sets the response field to a newly
// allocated Conmon_ExecSyncContainerResponse struct, preferring placement in s's segment.
func (s Conmon_execSyncContainer_Results) NewResponse() (Conmon_ExecSyncContainerResponse, error) {
	ss, err := NewConmon_ExecSyncContainerResponse(s.Struct.Segment())
	if err != nil {
		return Conmon_ExecSyncContainerResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Conmon_execSyncContainer_Results_List is a list of Conmon_execSyncContainer_Results.
type Conmon_execSyncContainer_Results_List struct{ capnp.List }

// NewConmon_execSyncContainer_Results creates a new list of Conmon_execSyncContainer_Results.
func NewConmon_execSyncContainer_Results_List(s *capnp.Segment, sz int32) (Conmon_execSyncContainer_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Conmon_execSyncContainer_Results_List{l}, err
}

func (s Conmon_execSyncContainer_Results_List) At(i int) Conmon_execSyncContainer_Results {
	return Conmon_execSyncContainer_Results{s.List.Struct(i)}
}

func (s Conmon_execSyncContainer_Results_List) Set(i int, v Conmon_execSyncContainer_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_execSyncContainer_Results_List) String() string {
	str, _ := text.MarshalList(0xf8e86a5c0baa01bc, s.List)
	return str
}

// Conmon_execSyncContainer_Results_Future is a wrapper for a Conmon_execSyncContainer_Results promised by a client call.
type Conmon_execSyncContainer_Results_Future struct{ *capnp.Future }

func (p Conmon_execSyncContainer_Results_Future) Struct() (Conmon_execSyncContainer_Results, error) {
	s, err := p.Future.Struct()
	return Conmon_execSyncContainer_Results{s}, err
}

func (p Conmon_execSyncContainer_Results_Future) Response() Conmon_ExecSyncContainerResponse_Future {
	return Conmon_ExecSyncContainerResponse_Future{Future: p.Future.Field(0, nil)}
}

const schema_ffaaf7385bc4adad = "x\xda\xa4UQh\x1cU\x14\xbd\xe7\xbd\xd9\x9d-\xa6" +
	"m\xa6\xb3\x05\x0d\x94\x9a\x90~\xd8P\xd3\xb8\x1f\xdaP" +
	"\xc8\x92X\x02\x15q\xdf\x16\x14k)Nv\x9f\xcd\x86" +
	"\xdd\x99\xcd\xcc\xacM\xb1\x92\xb6ZlA1JA," +
	"\xfa!B!\xc5\xfe\xaa\x04\x15*-B\x15\xa1\x05\x05" +
	"\x0b\x11B-\xed\x97 VLE\x1cy;;\xbb\x93" +
	"5\xd8\xa4\xf9\x9by\xef\xbew\xee\xbd\xe7\xdc\xf3v\xfe" +
	"\xc0\xb2l \xf1F\x82Hd\x13\xc9\xc0[8\xe2\x9e" +
	"\xfbp\xf452\xfa@\x94\x80N\x94\x99e=\x8c`" +
	"^dC\x84\xe0\xb7\xccK\xf3\xef\xdf~\xfc32z" +
	"yp\xe1\xc2\xa5\x17\x9e\xf8\xf3|@\x84\xcc\x02\xdb\x0f" +
	"\xf3\x0f\xf6\x1c\x91\xf9<\xff\xc6\x9c\xe7:Qp\xe5\xd3" +
	"\xd9\xc1\xbfn\x1c\x9e#\xd1\x87\xd8\xd9\x84\xda\xcc\\\xe6" +
	"\x9b\x98yS}\x9a\x0b\xfc\x16!\xb8\xf5\xcb?\x13\x87" +
	"\xaa\xfd\xdf\x85\xe0\x9a\x8a\xb9\xaa]\x03i\xc1\xe2\xe6\xaf" +
	"\xde\xeb\xda=\xf7}<\xad\xcbZ\x97Jk^Si" +
	"\xfd}r\xf7\xb1-[~\xfc\xa9\x1d\x88\xa9H$\xb6" +
	"3\xb3;\xa1\x80\xb6$\x14\xd0\xd9\xbe\xc3\xd5\x83c\x83" +
	"?\xb7E\xd7\x11\xef&\xba\x98\xf9PR\x05oN\xaa" +
	"\xabw\xbe2:{\xb0d\xde\x88c\xefJ^\x07\xc1" +
	"|\xba\x1ep\xf5\xd7\xad\x9f|{\xf3\xa9\xdfU@\x0c" +
	"Z\xe1e&\x93\xd7a\xbe\xa5n\xcb\x9cNn\x05!" +
	"87\xf9\xf1\xccb\x8fqGa\xb3\xf6L?\xd2{" +
	"\x98yQW\xe0_\xea*\xd3\xcf\xcf\x9ey\xfb\xd2c" +
	"\xa3w\x96\xf0\x91\xdaT\xe7#\xa5\xc0\xbf\xc0\xf9\x07\x0e" +
	"L\xdc^\x8c\x07,\xa4\xb6\xab\x80\xbb\xa9!\xda\x11\x14" +
	"\x1c\xbb\xe2\xd8;\\\xdd\xeb/8\x95\x8ac\xf7W]" +
	"\xc7w\xfa\xc3\xf5G\x0bV\xd5\xae\x0e\x8e\x84?rJ" +
	"\x16\xf6\x1d\xb1\x0b#\x8e\xed[%[\xba\xbd9\xcb\xd5" +
	"\xad\x8a'4\xae\x11i 2\xd6\x0f\x13\x89\x14\x87H" +
	"3L\xbbr\xb2&=\x1f\x9d\xad\xb2\x08\xe8$4a" +
	"\xb5{\xc1r\xc7\x16i\xc4\xbb\xd8}\xa2\xa5\x1b\xa3{" +
	"\xae\xc5\x96\xb1\xed\xeb\x16\x8e\xf1\xc8\x95\x16\xeb\xc6\xc0\xb5" +
	"\xe0Y\xe9z%\xc7\xces\xe9U\x1d\xdb\x934\xe2J" +
	"\xcb\x97\xcdZ\xf2Ca\xb2A\xb4\x9e\x886\xa2\x03{" +
	"\xda\xcb\xcf\x87'\x88\x82h\x8b\xc5\xf6\xea\xa7 E\x07" +
	"O\x105\xc5\x8bH/\x86\x18&f\xec\xd1\xd1b\x11" +
	"\x91\x8e\x8d]'\x88\x19\x03:Xs\xe2\x101il" +
	"{\x97\x98\xd1\xadO\xbf\x1c\x16\x94EPhd\x8c\x06" +
	"6e\x11D\\!\xca\x08n\x169`U\x84\xb7\xb7" +
	"\xa8^/\xfc\x1c :\x9b\x8c[]D\xe2\x00\x87\x18" +
	"g0\x804\xd4\xa2\xdcO$\x8a\x1c\xa2\xca\x00\x96\x06" +
	"#2*{\x89D\x99CL1\x18\x9c\xa5\xc1\x89\x8c" +
	"Z\x9eH\xf8\x1cb\x86\x81\x97\x8a\xe8 \x86\x0eB0" +
	"V\xb3\x8be\x99\xb3\x88\xfb\xe3\xcdE_\xba\x95\x92m" +
	"\x95I\xc9\x88\x18\xd4\xc0\xc8\xa9\x92\x9f\xb3\xfcq\x82\x87" +
	"\x0d\x84\x1cG=|CLd\xc9\x15\x94\xda\xe8\xa6R" +
	"\xb4U\x81\xb7\xaa6\x15\x96\xb6\xa97/\xbdZ\x99\xfb" +
	"K\xc6B\xd5\xde\xc1!\x1ed\x08\xdcHQD\xe8l" +
	"\xe9\xb7m4V\x82\xbc\x8c$\xbd\xeaFuw\x1bG" +
	"\x0a\xfeE\x0eQf\x88(*\x0d\xb6(2\x18\x1a\x1c" +
	"\xa9\xc5q\x0e\xe1+\x8e\x1e\x0e9\x9aT\xa7\xab\x1c\xe2" +
	"(\x0b\xfb=\xe2\x14\xeb\xc9k\xc4\xa0\x11\x86<\xbf\xe8" +
	"\xd4|\xac'\x86\xf5\xe1\xaft\xdd\xe87\xf0K\x15Y" +
	"|\xa6\xe6\xc7Y[\x93\x0aU\xf7xXb\xac\xc3\x13" +
	"\xb1\x0e\x17\x1a\xc1\xb4\xd1\xcd\x95\x8aH\x11C\xea>\x05" +
	"\xb1:2\x9b6\xd5F\xe6J\x10#\x87\x8a\xd7\x97n" +
	"\x82\xbe\xaa\x8cu\x8aC\xbc\x1e\x1b\xb3\xe3=D\xe2(" +
	"\x878\xa58l\xcc\xd9I\xc5\xe11\x0e\xf1\xa6\xe2\x90" +
	"\x87\x1c\x9eVsv\x8aC\x9ca04-\x0d\x8d\xc8" +
	"xg\x8cH\xccp\x88\x0f\x18\"?\x89\x86M\xf7\xad" +
	"C\xd1\xf7\x90\xca\xbd\xe4\xc7\x86\xb3T.>i\xf9\x04" +
	"\xd9\\sk\x9e\xaf* =v\xc9Z\xc5<Y\xd3" +
	"\xa5\xf7?~\xb3\x9c\xdd\xb4\xb4<\xdc\xd0\xb2\xea\x18\xcf" +
	"\x86}8\xbe\xb7\xd5\x9c\xb8\xdf(\x91:5\x7f\x1fq" +
	"Y\xc0:bXG\x98V)[v\xb1\xddW\x96\xb3" +
	"\xa1\xb5\xf8E\xc3s\xee\xfd\x8a6\xdf\xbd\xfb\xb0\x8a\xff" +
	">\xdey\xe9m\xac\x95W\xaa\xec\xe6c\x1ab\xff\x1b" +
	"\x00\x00\xff\xff\x0fX\xed\xab"

func init() {
	schemas.Register(schema_ffaaf7385bc4adad,
		0x83479da67279e173,
		0xb737e899dd6633f1,
		0xba77e3fa3aa9b6ca,
		0xcc2f70676afee4e7,
		0xceba3c1a97be15f8,
		0xd9d61d1d803c85fc,
		0xde3a625e70772b9a,
		0xe313695ea9477b30,
		0xf34be5cbac1feed1,
		0xf41122f890a371a6,
		0xf44732c48f949ab8,
		0xf8e86a5c0baa01bc)
}
